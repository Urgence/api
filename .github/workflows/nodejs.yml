name: Node.js CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [13.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
          image: postgres
      - run: yarn
      - run: cp .env.sample .env
      # - run: docker-compose -f .docker/docker-compose.yml  up
      - run: yarn build
        # - run: yarn test
        # registry: docker.pkg.github.com
        env:
          CI: true
#  services:
#    postgres:
#      image: postgres
#      env:
#        POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
#        POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
#        POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
#        POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
#        POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
#        POSTGRES_TEST_USER: ${{ secrets.POSTGRES_TEST_USER }}
#        POSTGRES_TEST_PASSWORD: ${{ secrets.POSTGRES_TEST_PASSWORD }}
#        POSTGRES_TEST_HOST: ${{ secrets.POSTGRES_TEST_HOST }}
#        POSTGRES_TEST_DB: ${{ secrets.POSTGRES_TEST_DB }}
#        POSTGRES_TEST_PORT: ${{ secrets.POSTGRES_TEST_PORT }}
#      ports:
#        - 5432:5432
#    # needed because the postgres container does not provide a healthcheck
#    options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
